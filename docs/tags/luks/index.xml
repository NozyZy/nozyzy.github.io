<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LUKS - Tag - NozZy</title>
        <link>http://localhost:1313/tags/luks/</link>
        <description>LUKS - Tag - NozZy</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>nozzy@club-rezo.net (NozZy)</managingEditor>
            <webMaster>nozzy@club-rezo.net (NozZy)</webMaster><lastBuildDate>Mon, 10 Jul 2023 17:15:29 &#43;0200</lastBuildDate><atom:link href="http://localhost:1313/tags/luks/" rel="self" type="application/rss+xml" /><item>
    <title>How to decrypt LUKS1 with key in memory</title>
    <link>http://localhost:1313/articles/decrypt-luks1-with-key-in-memory/</link>
    <pubDate>Mon, 10 Jul 2023 17:15:29 &#43;0200</pubDate><author>
        <name>NozZy</name>
    </author><guid>http://localhost:1313/articles/decrypt-luks1-with-key-in-memory/</guid>
    <description><![CDATA[<h1 id="how-to-decrypt-luks1-with-key-in-memory" class="headerLink">
    <a href="#how-to-decrypt-luks1-with-key-in-memory" class="header-mark"></a>How to decrypt LUKS1 with key in memory</h1><hr>
<p>LUKS is a standard for Linux disk encryption, and exists in two version. The latest version LUKS2 can be strong and a trusted solution when paired with strong password and algorithm, whereas LUKS1 suffers from a severe <strong>vulnerability</strong>. The master key, used to encrypt and decrypt the whole disk, <strong>can be retrieved in the memory</strong> of the running machine.
This article will show you how to <em><strong>recover that key</strong></em>, and then <em><strong>decrypt the disk</strong></em>.</p>]]></description>
</item></channel>
</rss>
